<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- In XML there is an <authorization-server/> element that is used in a similar way to configure the OAuth 2.0 Authorization Server. -->
	<!-- https://github.com/IISH/PID-webservice/blob/master/server/src/main/webapp/WEB-INF/oauth2-servlet.xml -->
	<oauth:authorization-server
		user-approval-handler-ref="userApprovalHandler"   
		token-services-ref="defaultTokenServices" 
		client-details-service-ref="clientDetailsService">
		
		<!-- 15 - REFRESH TOKEN -->
		<!-- https://tools.ietf.org/html/rfc6749#section-1.5  -->
		<oauth:refresh-token/>
		
		<!-- 11 - GRANT TYPE - CLIENT CREDENTIALS -->
		<!-- AuthorizationServerEndpointsConfigurer padrão: clientDetailsService -->
		<!-- https://tools.ietf.org/html/rfc6749#section-1.3.4  -->
		<oauth:client-credentials/>
		
		<!-- 10 - GRANT TYPE - PASSWORD -->
		<!-- AuthorizationServerEndpointsConfigurer padrão: userDetailsService -->
		<!-- https://tools.ietf.org/html/rfc6749#section-1.3.3 -->
		<oauth:password authentication-manager-ref="userAuthenticationManager"/>
	</oauth:authorization-server>

	<bean id="tokenStore" name="tokenStore" scope="singleton" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>

	<!-- 19 - CONFIGURACOES TOKEN EM MEMÓRIA -->
	<bean id="defaultTokenServices" name="defaultTokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="reuseRefreshToken" value="false" />
		<property name="clientDetailsService" ref="clientDetailsService" />
		<property name="accessTokenValiditySeconds" value="6000" />
	</bean>
	
	<!-- Loads an instance of OAuth2AuthenticationProcessingFilter. If resource-id is set, then only tokens that contains this resource id will be accepted. -->
	<oauth:resource-server id="resourceServerFilter" resource-id="rest-api" token-services-ref="defaultTokenServices" />
	
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>
		
	<bean id="oAuth2RequestFactory" class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<constructor-arg ref="clientDetailsService" />
	</bean>
	
	<bean id="userApprovalHandler" class="org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler">
		<property name="requestFactory" ref="oAuth2RequestFactory" />
		<property name="tokenStore" ref="tokenStore" />
	</bean>
	

</beans>